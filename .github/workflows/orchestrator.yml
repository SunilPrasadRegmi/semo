name: Orchestrator

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  detect:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.filter.outputs.build }}
      workers: ${{ steps.filter.outputs.workers }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build:
              - 'lib/**'
              - 'android/**'
              - 'ios/**'
              - 'assets/**'
              - 'pubspec.yaml'
              - 'analysis_options.yaml'
              - '.github/workflows/build-and-test.yml'
            workers:
              - 'cf-workers/**'
              - '.github/workflows/deploy-cf-workers.yml'

  run-build-and-test:
    name: Build and test
    if: ${{ needs.detect.outputs.build == 'true' }}
    needs: detect
    uses: ./.github/workflows/build-and-test.yml
    secrets: inherit

  run-cf-workers-deploy:
    name: Deploy Clouflare Workers
    if: ${{ needs.detect.outputs.workers == 'true' }}
    needs: detect
    uses: ./.github/workflows/deploy-cf-workers.yml
    secrets: inherit

  ai-analysis:
    name: AI Analysis
    needs:
      - detect
      - run-build-and-test
      - run-cf-workers-deploy
    if: ${{ needs.detect.outputs.build == 'true' || needs.detect.outputs.workers == 'true' }}
    uses: ./.github/workflows/ai-analysis.yml
    with:
      build_result: ${{ needs.run-build-and-test.result }}
      workers_result: ${{ needs.run-cf-workers-deploy.result }}
      origin_workflow_files: ${{ format('{0}{1}', needs.run-build-and-test.result != 'skipped' && '.github/workflows/build-and-test.yml' || '', needs.run-cf-workers-deploy.result != 'skipped' && (needs.run-build-and-test.result != 'skipped' && ',.github/workflows/deploy-cf-workers.yml' || '.github/workflows/deploy-cf-workers.yml') || '') }}
    secrets: inherit
